# -*- mode: ruby -*-
# # vi: set ft=ruby :

require File.join(File.dirname(__FILE__), 'slingshot.rb')

Vagrant.require_version ">= 1.6.0"

# Load slingshot
$slingshot = Slingshot.new
at_exit do
  $slingshot.write_output
end

Vagrant.configure("2") do |config|
  # always use Vagrants insecure key
  config.ssh.insert_key = false


  core_os = [
    $slingshot.coreos_update_channel,
    $slingshot.coreos_image_version,
  ]

  config.vm.box = "coreos-#{core_os[0]}"

  # set version only if it's not current
  config.vm.box_version = core_os[1] unless core_os[1] == 'current'

  config.vm.box_url = "http://%s.release.core-os.net/amd64-usr/%s/coreos_production_vagrant.json" % core_os
  ["vmware_fusion", "vmware_workstation"].each do |vmware|
    config.vm.provider vmware do |v, override|
      override.vm.box_url = "http://%s.release.core-os.net/amd64-usr/%s/coreos_production_vagrant_vmware_fusion.json" % core_os
    end
  end

  config.vm.provider :virtualbox do |v|
    v.check_guest_additions = false
    v.functional_vboxsf     = false
  end

  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end


  $slingshot.machines.each do |machine|

    config.vm.define machine.hostname do |config_vm|

      config_vm.vm.hostname = machine.fqdn

      ["vmware_fusion", "vmware_workstation"].each do |vmware|
        config_vm.vm.provider vmware do |v|
          v.gui = $vm_gui
          v.vmx['memsize'] = machine.memory
          v.vmx['numvcpus'] = machine.cores
        end
      end

      config_vm.vm.provider :virtualbox do |vb|
        vb.gui = $vm_gui
        vb.memory = machine.memory
        vb.cpus = machine.cores
      end

      config_vm.vm.network :private_network, ip: machine.ip

      user_data = $slingshot.user_data_path
      if File.exist?(user_data)
        config_vm.vm.provision :file, :source => "#{user_data}", :destination => "/tmp/vagrantfile-user-data"
        config_vm.vm.provision :shell, :inline => "mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/", :privileged => true
      end
    end
  end
end
